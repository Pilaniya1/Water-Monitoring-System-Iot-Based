<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map View</title>
    <link rel="stylesheet" href="/public/index.css">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@v7.2.2/ol.css">
    <script src="https://cdn.jsdelivr.net/npm/ol@v7.2.2/dist/ol.js"></script>
    <script
src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>
    <styl>
        
    </style>
</head>
<body>

    <div class="d-flex mapCenter">
        <div id="map"></div>
    <div class="dataCenter container p-5">
        <h1><%= data.name %> </h1>
        <h6>The water is fit for Drinking, Agriculture and Domestic use.</h6>
        <div id="emailHelp" style="margin-top: 0 !important;" class="form-text mt-3">Click the marker on the map to view info.</div>
        <h3 class="mt-4">Flow</h3>
        <canvas id="flow" style="width:100%;max-width:700px"></canvas>
        <h3 class="mt-4">Ph</h3>
        <canvas id="ph" style="width:100%;max-width:700px"></canvas>
        <h3 class="mt-4">Temp</h3>
        <canvas id="temp" style="width:100%;max-width:700px"></canvas>
        <h3 class="mt-4">Turbidity</h3>
        <canvas id="turb" style="width:100%;max-width:700px"></canvas>
    </div>
    </div>

    <div class="data" style="display:none" data-test="<%= layers %>"></div>
    <div class="data-name" style="display:none" data-test="<%= name %>"></div>
    <div class="data-7" style="display:none" data-test="<%= graph %>"></div>
    <div class="data-marker" style="display:none" data-test="<%= marker %>"></div>

    <div class="data-data" style="display:none" data-test="<%= data.marker %>"></div>



    <script>
        // map ja data
        let data7 = document.querySelector('.data-7').dataset.test;
        data7 = JSON.parse(data7);

        function getRandomFloat(min, max, decimals) {
            const str = (Math.random() * (max - min) + min).toFixed(decimals);

            return parseFloat(str);
        }

        let flow = data7[0];
        let ph = data7[1];
        let temp = data7[2];
        let turb = data7[3];
        
        for(let i=0;i<7;i++){
            flow[i] = getRandomFloat(0,3,2);
            ph[i] = getRandomFloat(6.5,8.5,1);
            temp[i] = getRandomFloat(18,24,2);
            turb[i] = getRandomFloat(0,0.2,3);
        }

        let data = document.querySelector('.data-data').dataset.test;
        data = JSON.parse(data);
        console.log(data)

        //main map rendering
        const map = new ol.Map({
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.TileJSON({
                        url: 'https://api.maptiler.com/maps/basic-v2/tiles.json?key=CHqfhztco7PfT748yf5U',
                        tileSize: 512
                    })
                })
            ],
            target: 'map',
            view: new ol.View({
                // pointer center
                center: ol.proj.fromLonLat(data),
                zoom: 13
            })
        });


        const catTeritory = [];

        let layerURI = document.querySelector('.data').dataset.test;
        let names = document.querySelector('.data-name').dataset.test;
        
        layerURL = JSON.parse(layerURI);
        names = JSON.parse(names);

        
        // const layerURL = ['https://api.maptiler.com/data/afd4431c-d786-467d-bf1f-80f2dfae41f9/features.json?key=9maRt48AU5m8461pNOWd']

        for(let i=0;i< 7;i++){

            const river = new ol.layer.Vector({
            source : new ol.source.Vector({
                url: layerURL[i],
                format : new ol.format.GeoJSON()
            }),
            style : new ol.style.Style({
                fill : new ol.style.Fill({
                    color : 'rgba(255, 255, 255, 0.2)'
                }),
                stroke : new ol.style.Stroke({
                    color : '#3B71CA',
                    width : 2
                })
            })
            });
            map.addLayer(river);
            catTeritory.push(river);
        } 

        let mark = document.querySelector('.data-marker').dataset.test;
        mark = JSON.parse(mark);
        let one = JSON.parse(mark[0]);

        // adding in markers
        for(let i=0;i<7;i++){
            let temp = JSON.parse(mark[i])
        const marker = new ol.layer.Vector({
            source : new ol.source.Vector({
                features : [
                    new ol.Feature({
                        geometry : new ol.geom.Point(ol.proj.fromLonLat(temp))
                    })
                ]
            }),
            style : new ol.style.Style({
                image : new ol.style.Icon({
                    src : 'https://docs.maptiler.com/openlayers/default-marker/marker-icon.png',
                    anchor : [0.5, 1]
                })
            })
        });
        map.addLayer(marker);
        }

        // event log when clicking a marker
        map.on('click', function(evt){
            map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){
                let cord = ol.proj.transform(evt.coordinate, 'EPSG:3857', 'EPSG:4326');
                console.log(cord[0], cord[1])
                let diffa = Number.MAX_VALUE;
                let diffb = Number.MAX_VALUE;
                let diff = 0;
                for(let i=0;i<7;i++){
                    let temp = JSON.parse(mark[i])
                    console.log(temp)
                    let diff1 = Math.abs(cord[0] - temp[0]);
                    let diff2 = Math.abs(cord[1] - temp[1]);
                    console.log(diff1,diff2)
                    if(diff1 < diffa && diff2 < diffb){
                        diffa = diff1;
                        diffb = diff2;
                        diff = i;
                    }
                }
                console.log(window.location.href);
                let url = window.location.href;
                let url2 = url.split('/');
                console.log(url2)
                let len = url2.length;
                let neww = url2.slice(0,len-1);
                neww.push(names[diff])
                neww = neww.join('/');
                window.open(neww, '_self');
            })
        });

    </script>
    <script src="/public/map.js"></script>
</body>

</html>